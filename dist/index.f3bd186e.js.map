{"mappings":"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","sources":["public/script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    loadTableData();\n    \n    var table = document.getElementById('methodsTable');\n    table.addEventListener('click', function(event) {\n        if (event.target.classList.contains('delete-button')) { // Ensure the click is on a delete button\n            deleteRow(event.target);\n        }\n    });\n});\n\nvar selectedImage;  // Global variable to keep track of the currently selected image element\n\nfunction changeImage(event, imgElement) {\n    event.stopPropagation();  // Prevents the click event from bubbling up\n    selectedImage = imgElement;  // Store the image element that was clicked\n    document.getElementById('fileInput').click();  // Trigger the file input dialog\n}\n\ndocument.getElementById('fileInput').addEventListener('change', function() {\n    console.log(\"File chosen\", this.files[0]);  // Debug log\n    updateImage(selectedImage, this);\n}); \n\nfunction updateImage(imgElement, inputElement) {\n    if (inputElement.files && inputElement.files[0]) {\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            imgElement.src = e.target.result;\n            saveTableData(); // Save after image change\n        };\n        reader.readAsDataURL(inputElement.files[0]);\n    }\n}\n\nfunction addMethod() {\n    var method = document.getElementById(\"methodInput\").value;\n    var lastUsed = document.getElementById(\"lastUsedInput\").value;\n    var timeSpent = document.getElementById(\"timeSpentInput\").value;\n    var achievements = document.getElementById(\"achievementsInput\").value;\n\n    if (!method || !lastUsed || !timeSpent || !achievements) {\n        alert(\"Please fill in all fields before adding a method.\");\n        return;\n    }\n\n    var table = document.getElementById(\"methodsTable\").getElementsByTagName('tbody')[0];\n    var row = table.insertRow(-1);\n    addRowCells(row, \"default.jpg\", method, lastUsed, timeSpent, achievements);\n\n    clearInputFields();\n    saveTableData();\n}\n\nfunction addMethodRow(imageUrl, method, lastUsed, timeSpent, achievements) {\n    var table = document.getElementById(\"methodsTable\").getElementsByTagName('tbody')[0];\n    var row = table.insertRow(-1);\n    addRowCells(row, imageUrl, method, lastUsed, timeSpent, achievements);\n}\n\nfunction addRowCells(row, imageUrl, method, lastUsed, timeSpent, achievements) {\n    var pictureCell = row.insertCell(0);\n    var img = document.createElement('img');\n    img.src = imageUrl;\n    img.alt = \"Default Image\";\n    img.style.width = \"100px\";\n    img.onclick = function(event) { changeImage(event, img); };\n    pictureCell.appendChild(img);\n\n    var methodCell = row.insertCell(1);\n    var lastUsedCell = row.insertCell(2);\n    var timeSpentCell = row.insertCell(3);\n    var achievementsCell = row.insertCell(4);\n\n    methodCell.textContent = method;\n    lastUsedCell.textContent = lastUsed;\n    timeSpentCell.textContent = timeSpent;\n    achievementsCell.textContent = achievements;\n\n    var deleteCell = row.insertCell(5);\n    var deleteButton = document.createElement('button');\n    deleteButton.textContent = 'Delete';\n    deleteButton.className = 'delete-button'; // Add class for event delegation\n    deleteCell.appendChild(deleteButton);\n}\n\nfunction saveTableData() {\n    var table = document.getElementById(\"methodsTable\").getElementsByTagName('tbody')[0];\n    var data = []; // Array to hold data of each row\n    for (var i = 0, row; row = table.rows[i]; i++) {\n        var rowData = {\n            method: row.cells[1].textContent,\n            lastUsed: row.cells[2].textContent,\n            timeSpent: row.cells[3].textContent,\n            achievements: row.cells[4].textContent,\n            imageUrl: row.cells[0].getElementsByTagName('img')[0].src\n        };\n        data.push(rowData);\n    }\n    localStorage.setItem('tableData', JSON.stringify(data));\n}\n\nfunction loadTableData() {\n    var data = localStorage.getItem('tableData');\n    if (data) {\n        console.log(\"Loading data...\", data);\n        data = JSON.parse(data);\n        var table = document.getElementById(\"methodsTable\").getElementsByTagName('tbody')[0];\n        table.innerHTML = ''; // Clear existing rows\n        data.forEach(addRowFromData);\n    } else {\n        // Initial rows if no data in local storage\n        addMethodRow('pics/sous_vide.jpg', 'Sous Vide', '19/12/2023 19:23:40', '12H 30M', 'Master');\n        addMethodRow('pics/pan_fried.jpg', 'Pan', '21/11/2023 13:49:21', '30M', 'Specialist');\n        addMethodRow('pics/grill.jpg', 'Grill', '13/01/2024 14:10', '1H', 'N.A.');\n    }\n}\n\nfunction addRowFromData(rowData) {\n    var table = document.getElementById(\"methodsTable\").getElementsByTagName('tbody')[0];\n    var row = table.insertRow(-1);\n    addRowCells(row, rowData.imageUrl, rowData.method, rowData.lastUsed, rowData.timeSpent, rowData.achievements);\n}\n\nfunction deleteRow(button) {\n    try {\n        var row = button.closest('tr');\n        if (row) {\n            row.parentNode.removeChild(row); // Remove the row\n            saveTableData(); // Update local storage data\n        } else {\n            console.error('Failed to find the row to delete.');\n        }\n    } catch (error) {\n        console.error('Error deleting row:', error);\n    }\n}\n\nfunction clearInputFields() {\n    document.getElementById(\"methodInput\").value = \"\";\n    document.getElementById(\"lastUsedInput\").value = \"\";\n    document.getElementById(\"timeSpentInput\").value = \"\";\n    document.getElementById(\"achievementsInput\").value = \"\";\n}\n\nfunction resetTable() {\n    localStorage.removeItem('tableData');\n    location.reload(); // Reload the page to reset the table\n}\n"],"names":[],"version":3,"file":"index.f3bd186e.js.map","sourceRoot":"/__parcel_source_root/"}